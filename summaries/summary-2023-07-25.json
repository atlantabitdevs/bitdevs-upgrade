{
  "2023-07-25": [
    {
      "summary": "This email is a message from Michael Ford, who is discussing the availability of Bitcoin Core version v25.0. He provides a link to download this version from the official Bitcoin Core website (bitcoincore.org) and also provides an alternative link to download it from the GitHub repository maintained by Peter Todd (petertodd/bitcoin).\n\nMichael then explains that this version of Bitcoin Core includes Antoine Riard's full-rbf (replace-by-fee) peering code, as well as some minor updates. Full-rbf nodes are nodes that support the full replace-by-fee functionality. Replace-by-fee allows users to increase the fee of a transaction that is already broadcasted to the network in order to increase the chances of it being included in a block.\n\nThe updates in this version of Bitcoin Core do two things for full-rbf nodes: \n1) It advertises a FULL_RBF service bit when the configuration option \"mempoolfullrbf\" is set to 1. This means that nodes with this option enabled will signal to other nodes that they support full replace-by-fee functionality.\n2) It connects to four additional FULL_RBF peers. This ensures that a core group of nodes are reliably propagating full-rbf replacements, which helps improve the overall network efficiency for replace-by-fee transactions.\n\nMichael mentions that not everyone needs to run this version, but it would be helpful if more people do. He also provides a link to a blog post written by Peter Todd that explains why running full-rbf is beneficial. In addition, he mentions that there are even hats related to this topic, with a link to a tweet showing a picture of these hats.\n\nThe email also includes a signature.asc file, which is an attachment that contains Michael's digital signature to verify the authenticity of the email and its contents.",
      "summaryeli15": "This is an email sent by Michael Ford to the Bitcoin development mailing list. It announces that Bitcoin Core version v25.0 is now available for download. This version includes a feature called \"full-rbf,\" which stands for full Replace-By-Fee.\n\nReplace-By-Fee (RBF) is a feature that allows users to replace an unconfirmed transaction with a new transaction that includes a higher fee. This can be useful if a user wants to speed up the confirmation of their transaction or if they made a mistake in the original transaction.\n\nThe full-rbf feature in Bitcoin Core v25.0 adds some enhancements to RBF. Firstly, it advertises a service bit called FULL_RBF when a certain configuration option called mempoolfullrbf is set to 1. This allows other nodes on the Bitcoin network to identify that a node supports full RBF.\n\nSecondly, it connects to four additional peers that also support full RBF. By doing this, it ensures that a core group of nodes are reliably propagating full RBF replacements. In simpler terms, it makes sure that there is a group of nodes that are actively promoting and spreading the use of full RBF.\n\nIt's important to note that not everyone needs to run this updated version of Bitcoin Core with full RBF. However, it would be helpful if more people did, as it would increase the adoption and effectiveness of the feature.\n\nIf you're interested in understanding why running full RBF is beneficial, you can read a blog post by Peter Todd, one of the developers, which explores the topic. The link to the blog post is provided in the email.\n\nLastly, the email includes a link to a tweet by Peter Todd, where he showcases hats related to this update. It's a playful way of promoting the update and generating some excitement within the community.\n\nThe email ends with Peter Todd's contact information and a signature attachment that can be used to verify his identity.",
      "title": "Full-RBF Peering Bitcoin Core v25.0 Released"
    },
    {
      "summary": "In this message, the LNP/BP Standards Association announces the release of a smart contract system called RGB. They reference a previous discussion in which they mentioned that client-side validation has the potential to upgrade the Bitcoin layer 1 blockchain, which they consider to be a limiting factor for the Bitcoin ecosystem. They argue that the current blockchain creates scaling and privacy problems and suggest that moving most validation work into a client-side validation system can be more efficient.\n\nThe LNP/BP Standards Association introduces a proposal called Prime, which aims to upgrade the Bitcoin protocol with a new layer 1 that is scalable (supporting billions of transactions per minute) and fully anonymous. This would involve moving most validation work to the client side. Importantly, this proposal does not require a softfork or upgrade by miners, though it can benefit from such upgrades.\n\nThe proposal claims that the Prime upgrade would not affect users who do not wish to upgrade, as it does not require consensus or majority for deployment. However, the upgrade would make systems like the Lightning Network and other layer 2 systems redundant. Additionally, the proposal states that assets like BRC20, inscriptions, and ordinals would no longer be possible, and instead, RGB smart contracts would be used for proper assets, NFTs, etc.\n\nThe white paper describing the Prime proposal can be found at the provided link. The LNP/BP Standards Association is in the process of forming a working group to focus on the formal specification and reference implementation of this new layer. They are open to cooperation from anyone interested in this topic. They also plan educational and workshop activities to help the community better understand the technology behind this proposal.\n\nThe LNP/BP Standards Association emphasizes that this infrastructural effort should not be managed by a for-profit company or commercial group with their own interests. They believe that the funding for this effort should come from non-profit donations. They are planning a fundraising campaign and encourage those interested in driving the Bitcoin evolution forward to contact them.\n\nFor-profit organizations can also become members of the LNP/BP Standards Association and join the committees that define the future shape of Bitcoin technologies.\n\nThe message ends with contact information for Dr. Maxim Orlovsky on behalf of the LNP/BP Standards Association, along with links to their website, GitHub, and Twitter accounts.",
      "summaryeli15": "Dear community,\n\nSome time ago, the LNP/BP Standards Association announced the release of the RGB smart contract system. This system has the potential to upgrade the Bitcoin layer 1 - blockchain, which has been causing scalability and privacy problems within the Bitcoin ecosystem. \n\nClient-side validation is a feature that can be introduced to improve the current Bitcoin protocol. It allows most of the validation work to be done on the client side instead of on the blockchain itself. This makes the validation process more efficient and scalable. \n\nWith the introduction of Prime, a proposal to upgrade the Bitcoin protocol aims to create a new layer 1 that is scalable and fully anonymous. This means that it can handle billions of transactions per minute while also ensuring privacy for users. It is important to note that this upgrade will not affect Bitcoin as money or other parts of the Bitcoin ecosystem. It can be deployed without requiring a softfork or miners' upgrade, but it can still benefit from them if implemented. \n\nThis upgrade also makes Lightning Network and other layer 2 systems redundant. It eliminates the need for additional systems and simplifies the overall architecture. \n\nAdditionally, the proposal states that it will make things like BRC20, inscriptions, ordinals, etc., impossible. Instead, proper assets, NFTs, etc., will be handled through RGB smart contracts. This ensures that non-users of these assets are not burdened with storing, validating, and using network bandwidth for third-party interests. \n\nThe white paper outlining this proposal can be found on GitHub. The LNP/BP Standards Association is forming a working group to focus on formal specification and reference implementation of this new layer. They welcome anyone who wishes to cooperate on this topic. They also plan to organize educational and workshop activities to help the community understand the underlying technology and make informed decisions about its adoption. \n\nThe LNP/BP Standards Association believes that such an infrastructural effort should not be managed by a for-profit company or commercial group. Funding for this effort should come through non-profit donations. They plan to launch a fundraising campaign and encourage those interested in driving the evolution of Bitcoin to get in touch. \n\nFor-profit organizations can also become members of the Association and join the committees that shape the future of Bitcoin technologies. \n\nDr. Maxim Orlovsky, on behalf of the LNP/BP Standards Association, invites the community to get involved in this important endeavor.\n\nYou can find more information and contact details on the LNP/BP Standards Association website, GitHub, and Twitter.\n\nI hope this explanation provides a clear understanding of the announcement and its implications for the Bitcoin ecosystem.\n\nBest regards,\n\n[Your Name]",
      "title": "Scaling and anonymizing Bitcoin at layer 1 with client-side validation"
    },
    {
      "summary": "In this email, Salvatore Ingala discusses the MATT proposal for smart contracts in Bitcoin. The MATT proposal introduces two core opcodes, OP_CHECKINPUTCONTRACTVERIFY and OP_CHECKOUTPUTCONTRACTVERIFY, which enhance Script (Bitcoin's scripting language) with additional capabilities.\n\nOP_CHECKINPUTCONTRACTVERIFY allows users to embed data in the next output and decide its script. It also allows users to access the embedded data in the current UTXO (Unspent Transaction Output). This opcode verifies that the script of the current input/output matches a certain value, which is not possible with Bitcoin's current Script.\n\nOP_CHECKOUTPUTCONTRACTVERIFY similarly allows users to embed data in the output transaction and match it against the embedded data in the current UTXO. It checks that a given output is a certain P2TR (Pay-to-Taproot) output script containing the desired embedded data.\n\nThese opcodes provide a form of introspection in Bitcoin, allowing users to check that the scripts and data in the input/output transactions meet certain conditions. This is a crucial feature for implementing smart contracts.\n\nThe email also mentions the possibility of extending these opcodes to support more complex cross-input semantics and multiple pieces of data. It suggests the use of OP_SHA256CAT opcode for embedding multiple pieces of data.\n\nThe second part of the email discusses the use of the MATT opcodes to create vaults. A vault is a state machine with two states: [V] (the initial vault UTXO) and [U] (the utxo produced by the \"trigger transaction\" during unvaulting). The email describes the structure of P2TR (Pay-to-Taproot) outputs for both [V] and [U] states, including the scripts and the embedded data.\n\nThe email notes that the MATT vault implementation differs from the OP_VAULT vault implementation. It also mentions the possibility of adding an additional output that is sent back to the same exact vault in the OP_VAULT implementation.\n\nOverall, the email provides a detailed explanation of the MATT proposal and its use in creating vaults.",
      "summaryeli15": "In this email exchange, Salvatore Ingala is discussing a proposal called MATT (Miniscript Abstract Two-level Transactions) for smart contracts in Bitcoin. The main focus of the discussion is on the core opcodes of MATT, which are OP_CHECKINPUTCONTRACTVERIFY and OP_CHECKOUTPUTCONTRACTVERIFY.\n\nThese opcodes enhance Bitcoin's scripting language with the ability to embed data in outputs and access that data when spending those outputs. They also allow for the creation of state machines and the ability to define conditions for spending.\n\nThe code snippets provided in the email show how these opcodes can be used to create vaults similar to those built with OP_VAULT, another proposed addition to Bitcoin's scripting functionality. The vaults created with MATT have two states: [V], representing the initial vault UTXOs, and [U], representing the unvaulting state.\n\nThe [V] state is associated with a specific script that includes the trigger script and recover script. The trigger script requires certain data in the witness stack, and it enforces an unvaulting condition. The recover script is optional and allows for the funds to be sent to a specified pubkey at any time.\n\nThe [U] state has its own set of scripts, including the withdrawal script and recover script. The withdrawal script verifies the embedded data in the current input, checks for a timelock, and validates the transaction outputs. The recover script is the same as in the [V] state.\n\nThe email also mentions possible extensions to the opcodes, such as supporting multiple pieces of embedded data and applying the OP_CHECKOUTPUTCONTRACTVERIFY opcode to arbitrary inputs.\n\nOverall, the MATT proposal aims to provide a simple and elegant way to create smart contracts in Bitcoin using these new opcodes. It is suggested that MATT could be implemented as an alternative to other proposed scripting enhancements like APO/OP_CTV/OP_VAULT. However, further testing and analysis would be needed to fully understand the implications and potential risks of implementing MATT in Bitcoin.",
      "title": "Vaults in the MATT framework"
    },
    {
      "summary": "This text is discussing a proposal regarding the taproot annex, which currently stands as consensus valid but non-standard. The conversations around standardization are leaning towards the adoption of a flexible Type-Length-Value (TLV) format. However, determining the exact format may take a significant amount of time. In the meantime, it is suggested that making the annex available in a non-structured form could provide immediate benefits.\n\nBy allowing developers to use the taproot annex without delay, they can take advantage of its features today without waiting for the finalization of a more lengthy standardization process. The proposal suggests defining any annex that begins with '0' as free-form, without additional constraints. This strategy offers several advantages.\n\nFirstly, immediate utilization is possible without waiting for the implementation of TLV or any other structured format. This allows developers to make use of the taproot annex for various applications right away. Secondly, assigning '0'-beginning annexes as free-form keeps options open for future developments and improvements in the structure. By not setting the structure in stone prematurely, the proposal ensures that the standardization process does not limit future possibilities.\n\nAnother benefit is that non-structured data may require fewer bytes compared to a probable TLV format. In a TLV format, the length needs to be encoded even when there is only a single field, while non-structured data can be more efficient in terms of space.\n\nIn conclusion, adopting this proposed approach will immediately broaden the utilization scope of the taproot annex while also preserving the option to transition to a more structured format in the future. The author believes this is a pragmatic and efficient route that can provide substantial benefits in both the short and long term.",
      "summaryeli15": "Hello! This message is discussing the current status of the taproot annex, which is a part of a consensus (an agreement) in the bitcoin community. Currently, the taproot annex is considered valid but non-standard, meaning it doesn't meet all the required specifications yet.\n\nThe conversation around standardizing the taproot annex is leaning towards using a flexible format called Type-Length-Value (TLV). TLV is a way to structure data by separating it into three parts: type, length, and value. This approach has a lot of potential, but deciding on the exact format may take some time.\n\nWhile waiting for the standardization process, the message suggests making the taproot annex available in a non-structured form. This means developers could use it without any specific constraints. There are immediate benefits to this approach. Developers can start using the taproot annex right away, taking advantage of its features without waiting for a lengthy standardization process.\n\nThe message proposes defining any annex that starts with '0' as free-form, without any additional restrictions. This strategy offers several advantages. Firstly, it allows immediate utilization of the taproot annex for various applications. Secondly, it keeps options open for future improvements in structure and development. By not setting the structure in stone too early, the message says we can remain flexible and adapt to changing needs.\n\nFurthermore, non-structured data may require fewer bytes compared to a probable TLV format. TLV would require additional encoding for length, even when there's only a single field. So using a non-structured format could potentially be more efficient for bitcoin transactions.\n\nIn conclusion, the message suggests adopting this approach would broaden the use of the taproot annex immediately, while still leaving the possibility for transitioning to a more structured format in the future. The author believes this is a practical and efficient route, offering benefits in both the short and long term.",
      "title": "Standardisation of an unstructured taproot annex"
    },
    {
      "summary": "The idea presented in this passage is about a potential solution for the problem of getting transaction packages to miners when peer-to-peer (p2p) package relay is still under development. The author starts by stating that they do not necessarily support the implementation of this idea but believe it is worth mentioning for discussion and consideration.\n\nThe scenario the author sets up involves two transactions: a parent transaction A that pays 0 sat/b (a hypothetical lightning commitment transaction) and a fee bumping child transaction B. Currently, these transactions cannot reach miners due to their low or nonexistent fees.\n\nTo address this issue, the author proposes a workaround using a third transaction, C. Transaction C would be designed to contain the raw transactions A and B in a taproot annex (a way of embedding data within a transaction). An alternative could be using a commit/reveal style inscription, but the author believes it would be more complicated and less efficient.\n\nTo ensure that transaction C propagates and reaches miners, it would need to pay sufficient fees. Additionally, it would utilize at least one of the same fee-contributing inputs as transaction B (but not inputs from transaction A). When miners receive transaction C, they would be able to detect the embedded transactions A and B in the annex and immediately submit them to their mempool as a transaction package. This new transaction package (A + B) would replace transaction C and could then be included in a block for mining.\n\nIt is crucial to ensure that the combined package of transactions A and B is more attractive to miners than transaction C. The extra weight of the embedded transactions in C helps with this. The fees for transaction C would never be paid because it has been replaced, so there are no additional costs associated with this package relay scheme unless the weight of A + B is very low and B needs to pay a higher fee rate than necessary to ensure the replacement of transaction C.\n\nIf not all miners adopt this incentive-compatible replacement, there is a chance that transaction C might still end up being mined. However, the author suggests that keeping the fee rate for transaction C at a minimum would make this outcome less likely. If transaction C is indeed mined, the operation can be retried with a modified version of transactions B and C, but the fees initially paid for transaction C would be forfeited.\n\nIn summary, the presented idea proposes using a third transaction to wrap the original transactions and ensure their propagation to miners. Once received, miners would extract the embedded transactions and submit them as a transaction package for mining. This solution aims to address the problem of low or no-fee transactions unable to reach miners during the development of p2p package relay.",
      "summaryeli15": "In this explanation, we will discuss a concept called out-of-band relay, which is a way to send transaction packages to miners while a peer-to-peer (p2p) package relay system is being developed. Please note that this concept may not necessarily be endorsed or supported, but it is worth mentioning as it can spark ideas and discussions.\n\nImagine a scenario where there are two transactions: Transaction A, which pays 0 satoshis per byte (for example, a lightning commitment transaction), and Transaction B, which is a fee bumping child transaction. Currently, these transactions cannot reach miners for processing. However, we can think of a workaround using a third transaction, Transaction C.\n\nTransaction C would be crafted to contain the raw data of Transactions A and B as part of its taproot annex. Alternatively, it could use a commit/reveal style inscription, but this might be more complex and less efficient. To ensure proper propagation, Transaction C would include sufficient fees. Additionally, it would use at least one of the same fee contributing inputs as Transaction B but not any inputs from Transaction A.\n\nWhen miners receive Transaction C, they can detect the embedded Transactions A and B in the annex and immediately add them to their mempool as a transaction package. This package, consisting of Transactions A and B, would replace Transaction C and could be included in a block for mining. It is crucial to ensure that the combined package of Transactions A and B is more attractive to miners than Transaction C. The weight of the embedded transactions in Transaction C helps in achieving this.\n\nIt is worth noting that the fees for Transaction C will never be paid because it has been replaced. Therefore, there are no additional costs associated with using this package relay scheme unless, for instance, the weight of Transactions A and B is extremely low, and Transaction B needs to pay a higher fee rate to ensure the replacement of Transaction C.\n\nIf not all miners adopt this incentive-compatible replacement scheme, there is a possibility that Transaction C may still be mined. This probability may be reduced if the fee rate for Transaction C is kept to a minimum. In such cases where Transaction C is indeed mined, the process can be retried with modified versions of Transactions B and C, but the fees paid for the initial Transaction C would be forfeited.\n\nIt is important to consider these factors and potential outcomes when exploring the concept of out-of-band relay. Keep in mind that this explanation is quite technical and oriented towards individuals who are already familiar with cryptocurrency transactions and mining processes.",
      "title": "Conceptual package relay using taproot annex"
    },
    {
      "summary": "In this message, the sender is providing an overview of a proposed protocol called \"Silent Payments\" and requesting feedback and consideration from the recipients. The protocol focuses on maintaining privacy in Bitcoin transactions by using a new address for each transaction. However, existing methods of achieving this often require sender-receiver interaction, which is not always feasible or desirable.\n\nThe proposed protocol aims to solve this issue by eliminating the need for interaction and notifications while protecting the privacy of both the sender and receiver. However, it requires wallets to scan the blockchain to detect payments, which can be a challenge for light clients. The sender mentions that light client support is an area of open research.\n\nThe goals of the protocol are listed as follows:\n1. No increase in transaction size or cost.\n2. Transactions blend in with other Bitcoin transactions and cannot be distinguished.\n3. Transactions cannot be linked to a silent payment address by an outside observer.\n4. No sender-receiver interaction is required.\n5. Multiple payments from the same sender cannot be linked.\n6. Each silent payment goes to a unique address to avoid address reuse.\n7. Supports payment labeling.\n8. Uses existing seed phrase or descriptor methods for backup and recovery.\n9. Separates scanning and spending responsibilities.\n10. Compatible with other spending protocols, such as CoinJoin.\n11. Light client/SPV wallet support.\n12. Protocol is upgradeable.\n\nAn overview of the protocol is provided, which includes various steps and calculations. The protocol involves Bob publishing a public key as a silent payment address, and Alice using her private key to create a destination output for Bob. The protocol also addresses scenarios where multiple outputs are needed, prevents address reuse, and allows for the use of all inputs in a Bitcoin transaction.\n\nTo ensure security, Bob can publish an address with a \"Spend and Scan Key\" to minimize risks. Labels can also be used to differentiate incoming payments for a single silent payment address. The sender emphasizes that labels are not meant for managing separate identities but rather for determining the source of an incoming payment. Additionally, labels can be used for managing change outputs.\n\nThe message concludes by indicating that it was sent via Proton Mail secure email and includes attachments related to public keys and a digital signature.",
      "summaryeli15": "This message is discussing a proposal for a new feature called Silent Payments in the Bitcoin network. The proposal is being submitted for review and feedback. Silent Payments aim to address privacy concerns by eliminating the need for direct interaction between senders and receivers during Bitcoin transactions. \n\nCurrently, when making a Bitcoin transaction, it is recommended to use a new address for each transaction to maintain privacy. This requires communication between the sender and receiver to obtain a fresh address or a method to generate addresses. However, this interaction is not always feasible or desirable. \n\nTo solve this issue, various protocols have been proposed that use a static payment address and rely on notifications sent through the blockchain. These protocols eliminate the need for direct interaction but come with drawbacks such as increased costs for one-time payments and a larger footprint in the blockchain, potentially revealing information about the sender and receiver. Additionally, these notification schemes can allow the receiver to link multiple payments from the same sender, compromising sender privacy. \n\nThe Silent Payments proposal aims to overcome these limitations by introducing a solution that eliminates the need for interaction and notifications while protecting the privacy of both the sender and receiver. However, this comes with a new requirement for wallets to scan the blockchain to detect payments. This scanning requirement is generally feasible for full nodes but poses a challenge for light clients, which are wallets that do not store the full blockchain. Implementing privacy-preserving light clients with this proposal would require further research and development. \n\nThe goals of the Silent Payments protocol are as follows:\n- Transactions should not increase in size or cost.\n- Transactions should blend in with other Bitcoin transactions and not be distinguishable.\n- Transactions should not be linked to a silent payment address by an outside observer.\n- No direct interaction between the sender and receiver should be required.\n- Multiple payments from the same sender should not be linked.\n- Each silent payment should go to a unique address to avoid accidental address reuse.\n- The protocol should support payment labeling.\n- Existing methods for backup and recovery, such as seed phrases or descriptors, should be used.\n- Scanning and spending responsibilities should be separated.\n- The protocol should be compatible with other spending protocols, such as CoinJoin.\n- Light clients and SPV wallets should be supported.\n- The protocol should be upgradeable.\n\nThe overview of the protocol goes into technical details about how Silent Payments would work. It describes the steps involved in sending payments and detecting them without direct interaction. It also explains how to prevent address reuse, handle multiple inputs, and include labels for payments and change outputs. The proposal even touches on the need for secure key management.\n\nOverall, Silent Payments aim to improve privacy in Bitcoin transactions by reducing the need for direct interaction while maintaining a high level of security. The proposal outlines the goals and technical details necessary to implement this feature in the Bitcoin network.",
      "title": "BIP for Silent Payments"
    },
    {
      "summary": "In this message, ThomasV is proposing an extension to BOLT-11, which is a protocol for Lightning Network invoicing. The proposed extension would allow an invoice to contain two bundled payments with distinct preimages and amounts.\n\nThe motivation for this proposal is to address a specific use case where services require prepayment of a mining fee in order for a non-custodian exchange to take place. Two examples of such services are submarine swaps and JIT (Just-In-Time) channels.\n\nIn both cases, the service provider receives a Hashed Time Lock Contract (HTLC) for which they don't have the preimage. They need to send funds on-chain (to the channel or submarine swap funding address) and wait for the client to reveal the preimage when they claim the payment. However, because there is no guarantee that the client will actually claim the payment, service providers need to ask for prepayment of mining fees.\n\nOne example provided in the message is Loop by Lightning Labs, which uses dedicated client software and can ask for a prepayment. But competitors who don't require a dedicated wallet, like the Boltz exchange, cannot do the same. This creates a vulnerability for Boltz, where they can be targeted with Denial-of-Service (DoS) attacks that force them to pay on-chain fees.\n\nIn the case of JIT channels, providers who want to protect themselves against this mining fee attack need to ask for the preimage of the main payment before they open the channel. However, this makes them custodians of the funds and subject to legal regulations like the European MICA regulation. Competitors who refuse to offer custodian services, such as Electrum, are excluded from this segment of the market.\n\nTo solve these issues, ThomasV proposes bundling the prepayment and the main payment in the same BOLT-11 invoice. The semantics of bundled payments would involve the receiver waiting for all the HTLCs of both payments to arrive before fulfilling the HTLCs of the prepayment. If the main payment doesn't arrive, the prepayment would fail with a Multiple Path Payment (MPP) timeout. Once the HTLCs of both payments have arrived, the receiver fulfills the HTLCs of the prepayment and broadcasts their on-chain transaction.\n\nIt should be noted that the main payment can still fail if the sender never reveals the preimage of the main payment. The proposal doesn't prevent service providers from stealing the prepayment, but that risk already exists today.\n\nThomasV believes that implementing this change in BOLT-11, rather than using new protocols like BOLT-12 or onion messages, would be more beneficial. The proposal doesn't require the exchange of new messages and can be done in a non-interactive way.\n\nIn summary, ThomasV's proposal aims to address the need for prepayment of mining fees in non-custodian services by allowing two bundled payments in BOLT-11 invoices. This change would level the playing field for competition among lightning service providers and potentially benefit ACINQ's pay-to-open service by making it fully non-custodian. The proposal suggests implementing the change in BOLT-11 and avoiding unnecessary complexity with new protocols.",
      "summaryeli15": "Good morning, ThomasV! I hope you're having a great day. I'm here to help explain your proposal in detail, as if you were 15 years old. \n\nYour proposal is about extending BOLT-11, which is a technical specification for Lightning Network invoices. The extension you want to add allows an invoice to have two bundled payments, each with its own unique preimage (a secret key) and amount of money.\n\nYou are proposing this extension to address a specific use case, specifically for services that require prepayment of a mining fee before a non-custodian exchange can take place. Two examples you provide are submarine swaps and JIT (Just-In-Time) channels.\n\nIn both cases, the service provider receives a type of payment called HTLC (Hashed Time-Locked Contract). However, they do not have the preimage (the secret key) required to claim the payment. So, they have to send funds on-chain (to a channel or submarine swap funding address) and then wait for the client to reveal the preimage when they want to claim the payment.\n\nSince there is no guarantee that the client will actually claim the payment, service providers need to ask for a prepayment of mining fees. In the case of submarine swaps, where Loop by Lightning Labs is used, the software can handle this prepayment. It's referred to as a \"no show penalty\" on the Loop website.\n\nHowever, competitors like Boltz exchange cannot ask for a prepayment because their website shows an invoice to the user, and their wallet is agnostic about the swap. It would be impractical for them to show two invoices to be paid simultaneously. This situation makes Boltz vulnerable to DoS (Denial of Service) attacks, where an attacker could force them to pay on-chain fees.\n\nIn the case of JIT channels, providers who want to protect themselves against this mining fee attack need to ask for the preimage of the main payment before they open the channel. Phoenix is an example of a service that does this, although their pay-to-open service is not open-source, so it's difficult to verify.\n\nThe issue with a service asking for the preimage first is that it becomes a custodian. This means that legally, they are responsible for the custody of the funds. In Europe, such a service would fall within the scope of the European MICA (Markets in Crypto-assets) regulation. Competitors like Electrum, who refuse to offer custodian services, are excluded from participating in this game.\n\nTo solve this problem, you propose bundling the prepayment and the main payment in the same BOLT-11 invoice. The semantics (meaning) of bundled payments would work as follows:\n\n1. The BOLT-11 invoice contains two preimages (secret keys) and two amounts: prepayment and main payment.\n2. The receiver of the invoice should wait until all the HTLCs of both payments have arrived before fulfilling the HTLCs of the prepayment. If the main payment doesn't arrive, they should fail the prepayment with a MPP (Multi-Path Payments) timeout.\n3. Once the HTLCs of both payments have arrived, the receiver fulfills the HTLCs of the prepayment and broadcasts their on-chain transaction. It's important to note that the main payment can still fail if the sender never reveals the preimage of the main payment.\n\nOf course, it's worth noting that your proposal does not prevent the service provider from stealing the prepayment, but that possibility already exists today.\n\nYou believe that this proposal would create a more level playing field for competition between lightning service providers. Currently, you need to use a dedicated client like Loop to use certain services, and competitors without a dedicated client are exposed to the mining fee attack.\n\nYou also believe that ACINQ (the company behind Phoenix) would benefit from this because it would make it possible for them to make their pay-to-open service fully non-custodian. Currently, the pay-to-open service they use may fall under the European MICA regulation, which is a serious issue for them.\n\nFinally, you believe that this change should be implemented in BOLT-11 rather than using BOLT-12 or onion messages. Your proposal doesn't require the exchange of new messages. You think it's unnecessary to add new messages when things can be done in a non-interactive way.\n\nI hope this detailed explanation helps you understand your proposal better, ThomasV! If you have any further questions or need clarification, feel free to ask.",
      "title": "Proposal: Bundled payments"
    }
  ]
}